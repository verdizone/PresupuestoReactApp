{"version":3,"sources":["helpers/revisarPresupuesto.js","components/ControlPresupuesto.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Pregunta.js","App.js","reportWebVitals.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","mensaje","Formulario","setGasto","setCrearGasto","useState","nombre","setNombre","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","trim","length","gasto","id","shortid","generate","htmlFor","type","name","placeholder","value","onChange","target","parseInt","Gasto","Listado","gastos","map","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b58c9c01.chunk.js","sourcesContent":["\nconst revisarPresupuesto = (presupuesto, restante) => {\n    \n    let clase;\n    \n    if( (presupuesto / 4) > restante ){\n        clase = 'alert alert-danger';\n    }else if( (presupuesto / 2) > restante ) {\n        clase = 'alert alert-warning';\n    }else{\n        clase = 'alert alert-success';\n    }\n\n    return clase;\n    \n}\n\nexport default revisarPresupuesto;","import React from 'react'\nimport revisarPresupuesto from '../helpers/revisarPresupuesto';\nimport PropTypes from 'prop-types';\n\nconst ControlPresupuesto = ({presupuesto, restante}) => {\n    return (\n        <>\n            <div className=\"alert alert-primary\">\n                <p>Presupuesto: ${presupuesto}</p>\n            </div>\n            <div className= {revisarPresupuesto(presupuesto, restante)} >\n                <p>Restante: ${restante}</p>\n            </div>\n        </>\n    )\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired,\n}\n\nexport default ControlPresupuesto\n","import React from 'react'\n\nconst Error = ({mensaje}) => {\n    return (\n        <div className=\"alert alert-danger error\">\n            <p> {mensaje} </p>\n        </div>\n    )\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport shortid from 'shortid';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ( {setGasto, setCrearGasto} ) => {\n    \n    const [nombre, setNombre] = useState('');\n    const [cantidad, setCantidad] = useState(0);\n    const [error, setError] = useState(false);\n\n    const agregarGasto = (e) =>{\n        e.preventDefault();\n                \n        //Validar \n\n        if( \n            cantidad < 1 \n            || isNaN(cantidad) \n            || nombre.trim() === 0 \n            || nombre.trim().length <= 0 \n            ){\n              setError(true);\n              return;\n            }\n        setError(false);\n\n        //Contruir el gasto = OBJ\n        const gasto = {\n            nombre,\n            cantidad,\n            id: shortid.generate(),\n        }\n\n        //Pasar el gasto al componente principal\n        setGasto(gasto);\n        setCrearGasto(true);\n\n        //Resetear el form\n        setNombre('');\n        setCantidad('');\n\n    }\n\n    return (\n        <div>\n            <form \n                onSubmit={agregarGasto}            \n            >\n\n                <h2>Agrega tus gastos aquí</h2>\n                {\n                    error ? <Error mensaje=\"La cantidad ingresada es inválida o no se colocó el nombre del gasto.\"/> : null\n                }\n                <div className=\"campo\">\n                    <label htmlFor=\"nombreGasto\">\n                        Nombre Gasto\n                    </label>\n                    <input \n                        type=\"text\"\n                        name=\"nombreGasto\" \n                        id=\"nombreGasto\"\n                        className=\"u-full-width\"\n                        placeholder=\"Ej. Transporte\"\n                        value={nombre}\n                        onChange={(e) =>setNombre(e.target.value)}\n                    />\n                    <label htmlFor=\"cantidadGasto\">\n                        Cantidad Gasto\n                    </label>\n                    <input \n                        type=\"number\"\n                        name=\"cantidadGasto\" \n                        id=\"cantidadGasto\"\n                        className=\"u-full-width\"\n                        placeholder=\"Ej. 100\"\n                        value={cantidad}\n                        onChange={(e) =>setCantidad( parseInt(e.target.value, 10) )}\n                    />\n                    <input \n                        type=\"submit\"\n                        className=\"u-full-width button-primary\"\n                        value=\"Agregar Gasto\"\n                    />\n\n\n                </div>\n            </form>\n        </div>\n    )\n}\n\nFormulario.propTypes = {\n    setGasto: PropTypes.func.isRequired,\n    setCrearGasto: PropTypes.func.isRequired,\n}\n\nexport default Formulario\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Gasto = ( { gasto } ) => {\n    return (\n        <>\n            <li className=\"gastos\">\n                <p>\n                    {gasto.nombre}\n                    <span\n                    className=\"gasto\"\n                    >\n                    ${gasto.cantidad}\n                    </span>    \n                </p>\n            </li>\n        </>\n    )\n}\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired,\n  }\n\nexport default Gasto\n","import Gasto from \"./Gasto\";\nimport PropTypes from 'prop-types';\n\nconst Listado = ({ gastos }) => {\n  return (\n    <>\n      <div className=\"gastos-realizados\">\n        <h2>Listado</h2>\n        {gastos.map((gasto) => (\n          <Gasto \n            key={gasto.id} \n            gasto={gasto} \n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nListado.propTypes = {\n  gasto: PropTypes.array,\n}\n\nexport default Listado;\n","import React, { useState } from 'react'\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Pregunta = ( { setPresupuesto, setRestante, setMostrarPregunta } ) => {\n\n    const [cantidad, setCantidad] = useState(0);\n\n    const [error, setError] = useState(false);\n\n    const definirPresupuesto = (e) =>{\n        // console.log(parseInt(e.target.value));\n        setCantidad(parseInt(e.target.value, 10));\n\n    }\n\n    const agregarPresupuesto = (e) =>{\n        e.preventDefault();\n         //Validar\n        if( cantidad < 1 || isNaN(cantidad) ){\n            // console.log('Error...');\n            setError(true);\n            return;\n        }\n        //Si pasa la validación\n        setError(false);\n        setPresupuesto(cantidad);\n        setRestante(cantidad);\n        setMostrarPregunta(false);\n\n    }\n\n    return (\n        <div>\n            <h2>Coloca tu presupuesto</h2>\n            {\n                error ? <Error mensaje=\"El Presupuesto es Incorrecto.\"/> : null\n            }\n            <form\n                onSubmit={agregarPresupuesto}\n            >\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu presupuesto\"\n                    onChange={definirPresupuesto}\n\n                />\n                <input \n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                    value=\"Definir presupuesto\"\n                    \n                />\n            </form>\n        \n        </div>\n    )\n}\n\nPregunta.propTypes = {\n    setPresupuesto: PropTypes.func.isRequired,\n    setRestante: PropTypes.func.isRequired,\n    setMostrarPregunta: PropTypes.func.isRequired,\n}\n\nexport default Pregunta\n","import { useState, useEffect } from \"react\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport Pregunta from \"./components/Pregunta\";\n\n\n\nfunction App() {\n  \n  const [presupuesto, setPresupuesto] = useState(0);\n  const [restante, setRestante] = useState(0);\n  const [mostrarPregunta, setMostrarPregunta] = useState(true);\n  const [gastos, setGastos] = useState([]);\n  const [gasto, setGasto] = useState({});\n  const [crearGasto, setCrearGasto] = useState(false);\n  \n\n  //useEffect que actualiza al restante\n  useEffect(()=>{\n    if(crearGasto){\n      //Agrega el nuevo presupuesto\n      setGastos([\n        ...gastos,\n        gasto\n      ]);\n      //Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      // console.log('Restante: ', restante);\n      // console.log('Gasto:', gasto.cantidad);\n      // console.log('PresupuestoRestante: ', presupuestoRestante);\n      setRestante(presupuestoRestante);\n      \n      //Una vez que se ejecuta el codigo se resetea a false\n      setCrearGasto(false);\n    }\n  }, [gasto, crearGasto, gastos, restante]);\n  \n\n  //Cuando agreguemos un gasto se ejecutara la sig func\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto semanal</h1>\n      </header>\n\n      <div className=\"contenido-principal contenido\">\n\n        {\n          mostrarPregunta \n          ?\n          ( \n          <Pregunta \n          setPresupuesto = {setPresupuesto}\n          setRestante = {setRestante}\n          setMostrarPregunta = {setMostrarPregunta}\n          />\n          )\n          :\n          ( \n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario \n                setGasto={setGasto}\n                setCrearGasto={setCrearGasto}\n              />\n            </div>\n            <div className=\"one-half column\">\n              <Listado \n                gastos={gastos}\n              />\n              <ControlPresupuesto \n                presupuesto={presupuesto}\n                restante={restante}\n              />\n            </div>\n  \n          </div>\n          )\n        }\n        \n\n\n      </div>\n        \n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}